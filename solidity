# INTRODUCTION 
What Is a Blockchain?
A blockchain is a distributed database or ledger shared among a computer network's nodes. They are best known for their crucial role in cryptocurrency systems for maintaining a secure and decentralized record of transactions, but they are not limited to cryptocurrency uses. Blockchains can be used to make data in any industry immutable—the term used to describe the inability to be altered.

Because there is no way to change a block, the only trust needed is at the point where a user or program enters data. This aspect reduces the need for trusted third parties, which are usually auditors or other humans that add costs and make mistakes.

Since Bitcoin's introduction in 2009, blockchain uses have exploded via the creation of various cryptocurrencies, decentralized finance (DeFi) applications, non-fungible tokens (NFTs), and smart contracts.
KEY TAKEAWAYS
Blockchain is a type of shared database that differs from a typical database in the way it stores information; blockchains store data in blocks linked together via cryptography.
Different types of information can be stored on a blockchain, but the most common use for transactions has been as a ledger. 
In Bitcoin’s case, blockchain is decentralized so that no single person or group has control—instead, all users collectively retain control.
Decentralized blockchains are immutable, which means that the data entered is irreversible. For Bitcoin, transactions are permanently recorded and viewable to anyone.
⌨️ (02:03:05) Introduction

Remix
Solidity Documentation
Setting Up Your First Contract
⌨️ (02:05:18) Setting Up Your First Contract

Versioning
Take notes in your code!
What is a software license
SPDX License
Compiling
Contract Declaration
Basic Solidity: Types
⌨️ (02:12:28) Basic Solidity Types

Types & Declaring Variables
uint256, int256, bool, string, address, bytes32
Solidity Types
Bits and Bytes
Default Initializations
Comments
Basic Solidity: Functions
⌨️ (02:18:40) Basic Solidity Functions

Functions
Deploying a Contract
Smart Contracts have addresses just like our wallets
Calling a public state-changing Function
Visibility
Gas III | An example
Scope
View & Pure Functions
Basic Solidity: Arrays & Structs
⌨️ (02:35:30) Basic Solidity Arrays & Structs

Structs
Intro to Storage
Arrays
Dynamic & Fixed Sized
push array function
Basic Solidity: Compiler Errors and Warnings
⌨️ (02:45:35) Basic Solidity Errors & Warnings

Yellow: Warnings are Ok
Red: Errors are not Ok
